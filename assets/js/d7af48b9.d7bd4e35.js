"use strict";(self.webpackChunkignite_cookbook=self.webpackChunkignite_cookbook||[]).push([[6264],{2508:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=t(7624),n=t(2172);const o={title:"Enforcing JS/TS Import Order",description:"Ensuring that file imports are ordered in a consistent manner",tags:["imports","prettier"],last_update:{author:"Mark Rickert"},publish_date:new Date("2024-02-29T00:00:00.000Z")},s="Enforcing JS/TS Import Order",a={id:"recipes/EnforcingImportOrder",title:"Enforcing JS/TS Import Order",description:"Ensuring that file imports are ordered in a consistent manner",source:"@site/docs/recipes/EnforcingImportOrder.md",sourceDirName:"recipes",slug:"/recipes/EnforcingImportOrder",permalink:"/docs/recipes/EnforcingImportOrder",draft:!1,unlisted:!1,tags:[{label:"imports",permalink:"/docs/tags/imports"},{label:"prettier",permalink:"/docs/tags/prettier"}],version:"current",lastUpdatedBy:"Mark Rickert",lastUpdatedAt:1709314625,formattedLastUpdatedAt:"Mar 1, 2024",frontMatter:{title:"Enforcing JS/TS Import Order",description:"Ensuring that file imports are ordered in a consistent manner",tags:["imports","prettier"],last_update:{author:"Mark Rickert"},publish_date:"2024-02-29T00:00:00.000Z"},sidebar:"mainSidebar",previous:{title:"EAS Update",permalink:"/docs/recipes/EASUpdate"},next:{title:"Environment Variables",permalink:"/docs/recipes/EnvironmentVariables"}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"Add The Plugin",id:"add-the-plugin",level:2},{value:"Configure Prettier",id:"configure-prettier",level:2},{value:"Rewrite Your Imports!",id:"rewrite-your-imports",level:2}];function c(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"enforcing-jsts-import-order",children:"Enforcing JS/TS Import Order"}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(r.p,{children:"With Intellisense and Copilot at our fingertips, it's easy to forget that the order of imports in a file can have a big impact on the readability and maintainability of your code. Import helpers typically just put the autogenerated import at the bottom of all the other imports."}),"\n",(0,i.jsxs)(r.p,{children:["This recipe will show you how to enforce a consistent import order in your project using the ",(0,i.jsx)(r.a,{href:"https://github.com/serverless-guru/prettier-import-order",children:"@serverless-guru/prettier-plugin-import-order"})," prettier plugin."]}),"\n",(0,i.jsxs)(r.admonition,{type:"info",children:[(0,i.jsxs)(r.p,{children:["There are a few other import order prettier plugins out there, but I've found this one to be the most flexible and easy to use. It also has more granular support for typescript imports and the ability to specify blank lines with a simple empty string in the ",(0,i.jsx)(r.code,{children:"importOrder"})," array."]}),(0,i.jsxs)(r.p,{children:["Another library to consider would be ",(0,i.jsx)(r.a,{href:"https://github.com/trivago/prettier-plugin-sort-imports",children:"@trivago/prettier-plugin-sort-imports"})," which has basically the same install procedure but slightly different options for configuration."]}),(0,i.jsx)(r.p,{children:"Play around with them and see which one you like best!"})]}),"\n",(0,i.jsxs)(r.p,{children:["We'll get started by Igniting a new application with the ",(0,i.jsx)(r.code,{children:"cng"})," workflow, or use your own Ignite project if you have one."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"npx ignite-cli new PizzaApp --workflow=cng --yes\ncd PizzaApp\n"})}),"\n",(0,i.jsx)(r.h2,{id:"add-the-plugin",children:"Add The Plugin"}),"\n",(0,i.jsxs)(r.p,{children:["Add the following plugin to your project (you can use ",(0,i.jsx)(r.code,{children:"yarn"})," or ",(0,i.jsx)(r.code,{children:"npm"}),"):"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"yarn add --dev @serverless-guru/prettier-plugin-import-order\n"})}),"\n",(0,i.jsx)(r.h2,{id:"configure-prettier",children:"Configure Prettier"}),"\n",(0,i.jsxs)(r.p,{children:["In a default Ignited app, the prettier configuration is located in the ",(0,i.jsx)(r.code,{children:"package.json"})," file. You can edit that file but we recommend moving the configuration to a separate file called ",(0,i.jsx)(r.code,{children:".prettierrc.js"})," for better organization and to have the ability to comment the configuration."]}),"\n",(0,i.jsxs)(r.p,{children:["Remove the ",(0,i.jsx)(r.code,{children:"prettier"})," key from the ",(0,i.jsx)(r.code,{children:"package.json"})," file and create a new file called ",(0,i.jsx)(r.code,{children:".prettierrc.js"})," and put the following content in it:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:'// @ts-check\n/** @type {import("@serverless-guru/prettier-plugin-import-order").PrettierConfig} */\nmodule.exports = {\n  // begin: settings from the package.json file\n  printWidth: 100,\n  semi: false,\n  singleQuote: false,\n  trailingComma: "all",\n  // end: settings from the package.json file\n\n  // Sort and group imports using the @serverless-guru/prettier-import-order plugin.\n  // https://github.com/serverless-guru/prettier-import-order\n  //\n  // See documentation and usage: https://www.npmjs.com/package/@serverless-guru/prettier-plugin-import-order#usage\n  importOrder: [\n    "^react(-native)?$", // React and react-native stuff goes at the top\n    "", // use empty strings to separate groups with empty lines\n    "<THIRD_PARTY_MODULES>", // Third party modules (this is a plugin keyword)\n    "",\n    "^app/(.*)$",\n    "",\n    "^../(.*)$", // Local imports in parent directories\n    "^./(.*)$", // Local imports in current directory\n  ],\n  importOrderSeparation: false, // turn this on to see the sorting groups.\n  importOrderSortIndividualImports: true,\n  importOrderMergeDuplicateImports: true,\n  importOrderTypeImportsToTop: true, // Set this to false if you want type imports to be sorted with the rest of the imports\n  importOrderCaseInsensitive: true,\n  importOrderParserPlugins: ["typescript", "jsx"],\n  // End sort options\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["Obviously, you'll want to customize the ",(0,i.jsx)(r.code,{children:"importOrder"})," array to match your project's specific import patterns and preferences."]}),"\n",(0,i.jsx)(r.h2,{id:"rewrite-your-imports",children:"Rewrite Your Imports!"}),"\n",(0,i.jsx)(r.admonition,{type:"tip",children:(0,i.jsxs)(r.p,{children:["At this point you should probably commit your changes to ",(0,i.jsx)(r.code,{children:"git"})," because the next step is gonna change a lot of files!"]})}),"\n",(0,i.jsx)(r.p,{children:"Now run the following command to rewrite all of your imports:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"yarn format\n"})}),"\n",(0,i.jsxs)(r.p,{children:["You should see a bunch of file changes after this command where the import order has been updated to match the configuration you specified in the ",(0,i.jsx)(r.code,{children:".prettierrc.js"})," file. If it all looks good, commit the changes again!"]}),"\n",(0,i.jsx)(r.p,{children:"If you have your code editor set up to format on save, you should see the import order enforced as you work on your project with every save!"})]})}function l(e={}){const{wrapper:r}={...(0,n.M)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},2172:(e,r,t)=>{t.d(r,{I:()=>a,M:()=>s});var i=t(1504);const n={},o=i.createContext(n);function s(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);
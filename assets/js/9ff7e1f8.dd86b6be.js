"use strict";(self.webpackChunkignite_cookbook=self.webpackChunkignite_cookbook||[]).push([[2181],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=p(n),u=r,g=h["".concat(l,".").concat(u)]||h[u]||d[u]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Migrating to FlashList",description:"How to migrate over to Shopify's FlashList in an Ignite project",tags:["Shopify","FlashList"],last_update:{author:"Frank Calise"},publish_date:new Date("2022-10-13T00:00:00.000Z")},o="Migrating to FlashList",s={unversionedId:"recipes/MigratingToFlashList",id:"recipes/MigratingToFlashList",title:"Migrating to FlashList",description:"How to migrate over to Shopify's FlashList in an Ignite project",source:"@site/docs/recipes/MigratingToFlashList.md",sourceDirName:"recipes",slug:"/recipes/MigratingToFlashList",permalink:"/docs/recipes/MigratingToFlashList",draft:!1,tags:[{label:"Shopify",permalink:"/docs/tags/shopify"},{label:"FlashList",permalink:"/docs/tags/flash-list"}],version:"current",lastUpdatedBy:"Frank Calise",lastUpdatedAt:1684868060,formattedLastUpdatedAt:"May 23, 2023",frontMatter:{title:"Migrating to FlashList",description:"How to migrate over to Shopify's FlashList in an Ignite project",tags:["Shopify","FlashList"],last_update:{author:"Frank Calise"},publish_date:"2022-10-13T00:00:00.000Z"},sidebar:"mainSidebar",previous:{title:"Maestro Setup",permalink:"/docs/recipes/MaestroSetup"},next:{title:"Migrating to MMKV",permalink:"/docs/recipes/MigratingToMMKV"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Project Dependencies",id:"project-dependencies",level:2},{value:"Code Changes",id:"code-changes",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"migrating-to-flashlist"},"Migrating to FlashList"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://shopify.github.io/flash-list/"},"Shopify's FlashList")," provides a drop-in replacement for React Native's FlatList component. It's an easy refactor and your lists will perform better within your app!"),(0,r.kt)("p",null,"We'll start with the demo project provided by Ignite, so if you need a new one fire away with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-nodejs"},"npx ignite-cli new PizzaApp --yes\ncd PizzaApp\n")),(0,r.kt)("h2",{id:"project-dependencies"},"Project Dependencies"),(0,r.kt)("p",null,"Whether you're sticking with Expo or running with bare React Native workflow, our install steps are the same:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-nodejs"},"npx expo install @shopify/flash-list\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: No ",(0,r.kt)("inlineCode",{parentName:"em"},"pod install")," was run here because the scripts set up in an Ignite project take care of that for you!")),(0,r.kt)("h2",{id:"code-changes"},"Code Changes"),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"DemoPodcastListScreen.tsx")," and add the new import:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { FlashList } from "@shopify/flash-list";\n')),(0,r.kt)("p",null,"Find the ",(0,r.kt)("inlineCode",{parentName:"p"},"FlatList")," being used in the returned JSX and swap it out for ",(0,r.kt)("inlineCode",{parentName:"p"},"FlashList")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'return (\n  <Screen\n    preset="fixed"\n    safeAreaEdges={["top"]}\n    contentContainerStyle={$screenContentContainer}\n  >\n    // highlight-next-line\n    <FlashList<Episode>\n      data={episodeStore.episodesForList}\n      extraData={episodeStore.favorites.length + episodeStore.episodes.length}\n      contentContainerStyle={$flatListContentContainer}\n      refreshing={refreshing}\n      onRefresh={manualRefresh}\n      // ...\n    />\n    // ...\n  </Screen>\n);\n')),(0,r.kt)("p",null,"Run the app in the iOS simulator to test the changes, either ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn expo:ios")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn ios"),". Navigate to the Podcast List screen:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Press "Tap to sign in!"'),(0,r.kt)("li",{parentName:"ol"},'Press "Let\'s go!"'),(0,r.kt)("li",{parentName:"ol"},'Tap on the "Podcast"')),(0,r.kt)("p",null,"You'll get a warning out in the terminal, something similar to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"}," WARN  estimatedItemSize FlashList prop is not defined - based on current configuration you can set\n it to 187 to optimize list performance. Refer to FlashList documentation for more details.\n")),(0,r.kt)("p",null,"Simply add that prop to the ",(0,r.kt)("inlineCode",{parentName:"p"},"FlashList")," component with the suggested values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"<FlashList<Episode>\n  data={episodeStore.episodesForList}\n  // highlight-next-line\n  estimatedItemSize={187}\n  // ...\n/>\n")),(0,r.kt)("p",null,"Reload the app and take note that the warning message has cleared!"),(0,r.kt)("p",null,"Now everything looks like it did before, while also gaining all of the performance boosts from FlashList! It's a pretty straight forward approach and Shopify has done a good job helping the developer along with the useful console warnings as a guide."))}d.isMDXComponent=!0}}]);
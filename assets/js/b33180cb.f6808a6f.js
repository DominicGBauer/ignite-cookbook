"use strict";(self.webpackChunkignite_cookbook=self.webpackChunkignite_cookbook||[]).push([[1528],{4640:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var a=t(7624),o=t(4552);const i={title:"Pristine Expo Project",description:"How to remove native related code from a unified Ignite project",tags:["Expo"],last_update:{author:"Frank Calise"},publish_date:new Date("2022-10-11T00:00:00.000Z")},s="Pristine Expo Project",r={id:"archive/PristineExpoProject",title:"Pristine Expo Project",description:"How to remove native related code from a unified Ignite project",source:"@site/docs/archive/PristineExpoProject.md",sourceDirName:"archive",slug:"/archive/PristineExpoProject",permalink:"/docs/archive/PristineExpoProject",draft:!1,unlisted:!1,tags:[{label:"Expo",permalink:"/docs/tags/expo"}],version:"current",lastUpdatedBy:"Frank Calise",lastUpdatedAt:1708554035,formattedLastUpdatedAt:"Feb 21, 2024",frontMatter:{title:"Pristine Expo Project",description:"How to remove native related code from a unified Ignite project",tags:["Expo"],last_update:{author:"Frank Calise"},publish_date:"2022-10-11T00:00:00.000Z"},sidebar:"mainSidebar",previous:{title:"Overview",permalink:"/docs/archive/"}},c={},p=[{value:"Notes",id:"notes",level:2},{value:"Steps",id:"steps",level:2},{value:"Project Initialization",id:"project-initialization",level:3},{value:"Filesystem Changes",id:"filesystem-changes",level:3},{value:"Package Changes",id:"package-changes",level:3},{value:"<code>package.json</code> Script Updates",id:"packagejson-script-updates",level:3}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"This recipe is for Ignite v8 only."})}),"\n",(0,a.jsx)(n.h1,{id:"pristine-expo-project",children:"Pristine Expo Project"}),"\n",(0,a.jsx)(n.p,{children:"Ignite sets your project up ready to run both a bare React Native project or with Expo."}),"\n",(0,a.jsx)(n.p,{children:"However, if you don't want to manage any of the native files going forward, you can follow these steps to get to an Expo only project structure."}),"\n",(0,a.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,a.jsxs)(n.p,{children:["Keep in mind you may have to adopt the following steps for a different package manager or OS. The following are compatible for the ",(0,a.jsx)(n.code,{children:"yarn"})," package manager while running on MacOS."]}),"\n",(0,a.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,a.jsx)(n.h3,{id:"project-initialization",children:"Project Initialization"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npx ignite-cli new PizzaApp --yes\ncd PizzaApp\n"})}),"\n",(0,a.jsx)(n.h3,{id:"filesystem-changes",children:"Filesystem Changes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"rm -rf android\nrm -rf ios\nrm index.js          # Expo's entry point is App.js\nrm metro.config.js   # Expo will use the default\n"})}),"\n",(0,a.jsx)(n.h3,{id:"package-changes",children:"Package Changes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn remove react-native-bootsplash\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Removes a native library pertaining to the splash screen (this will be handled via ",(0,a.jsx)(n.code,{children:"expo-splash-screen"}),")"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn remove expo-modules-core\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"packagejson-script-updates",children:[(0,a.jsx)(n.code,{children:"package.json"})," Script Updates"]}),"\n",(0,a.jsxs)(n.p,{children:["These changes are optional as you can continue to use the prefixed ",(0,a.jsx)(n.code,{children:"expo:"})," commands, however you might just want a cleaned up ",(0,a.jsx)(n.code,{children:"scripts"})," section of your ",(0,a.jsx)(n.code,{children:"package.json"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "ignite-eas",\n  "version": "0.0.1",\n  "private": true,\n  "main": "node_modules/expo/AppEntry.js",\n  "scripts": {\n    "compile": "tsc --noEmit -p . --pretty",\n    "format": "prettier --write \\"app/**/*.{js,jsx,json,md,ts,tsx}\\"",\n    "lint": "eslint App.js app test --fix --ext .js,.ts,.tsx && npm run format",\n    "patch": "patch-package",\n    "test": "jest",\n    "test:watch": "jest --watch",\n    "adb": "adb reverse tcp:9090 tcp:9090 && adb reverse tcp:3000 tcp:3000 && adb reverse tcp:9001 tcp:9001 && adb reverse tcp:8081 tcp:8081",\n    "postinstall": "node ./bin/postInstall",\n    "clean": "npx react-native-clean-project",\n    "clean-all": "npx react-native clean-project-auto",\n    "start": "expo start",\n    "android": "expo start --android",\n    "ios": "expo start --ios",\n    "web": "expo start --web"\n  }\n  // ... more config ...\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>r,M:()=>s});var a=t(1504);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);
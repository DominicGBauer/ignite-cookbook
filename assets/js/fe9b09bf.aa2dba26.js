"use strict";(self.webpackChunkignite_cookbook=self.webpackChunkignite_cookbook||[]).push([[140],{1004:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var t=s(7624),i=s(4552);const o={title:"CircleCI CD Setup - React Native",description:"Learn how to set up your CircleCI CD instance for React Native",tags:["Guide","CI/CD"],last_update:{author:"Robin Heinze"},publish_date:new Date("2022-10-09T00:00:00.000Z")},c=void 0,r={id:"recipes/CircleCIRNSetup",title:"CircleCI CD Setup - React Native",description:"Learn how to set up your CircleCI CD instance for React Native",source:"@site/docs/recipes/CircleCIRNSetup.md",sourceDirName:"recipes",slug:"/recipes/CircleCIRNSetup",permalink:"/docs/recipes/CircleCIRNSetup",draft:!1,unlisted:!1,tags:[{label:"Guide",permalink:"/docs/tags/guide"},{label:"CI/CD",permalink:"/docs/tags/ci-cd"}],version:"current",lastUpdatedBy:"Robin Heinze",lastUpdatedAt:1675375855,formattedLastUpdatedAt:"Feb 2, 2023",frontMatter:{title:"CircleCI CD Setup - React Native",description:"Learn how to set up your CircleCI CD instance for React Native",tags:["Guide","CI/CD"],last_update:{author:"Robin Heinze"},publish_date:"2022-10-09T00:00:00.000Z"},sidebar:"mainSidebar",previous:{title:"Accessiblity Font Sizes",permalink:"/docs/recipes/AccessibilityFontSizes"},next:{title:"Creating a Good Experience for Screen Readers",permalink:"/docs/recipes/CreatingGreateExperienceForScreenReaders"}},l={},a=[{value:"First Things First",id:"first-things-first",level:3},{value:"CircleCI Setup",id:"circleci-setup",level:3},{value:"Continuous Integration",id:"continuous-integration",level:3},{value:"iOS Continuous Deployment",id:"ios-continuous-deployment",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This document shows the steps necessary to set up CircleCI automatic continuous integration testing and automatic Fastlane beta builds upon successfully merging a pull request."}),"\n",(0,t.jsx)(n.h3,{id:"first-things-first",children:"First Things First"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Write Tests"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If the project already has tests, great. If not, write some."}),"\n",(0,t.jsxs)(n.li,{children:["See ",(0,t.jsx)(n.a,{href:"https://github.com/infinitered/ChainReactApp2019",children:"this"})," for an example of how Infinite Red typically sets up tests for a React Native app."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"circleci-setup",children:"CircleCI Setup"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://circleci.com/vcs-authorize/",children:"Log into CircleCI"})," with your Github account"]}),"\n",(0,t.jsx)(n.li,{children:"Choose your organization from the dropdown in the top left"}),"\n",(0,t.jsxs)(n.li,{children:["Navigate to ",(0,t.jsx)(n.code,{children:"Add Projects"})," on the left"]}),"\n",(0,t.jsx)(n.li,{children:"Search for your repo"}),"\n",(0,t.jsx)(n.li,{children:"Choose Set Up Project"}),"\n",(0,t.jsx)(n.li,{children:"Set Up Project"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Select ",(0,t.jsx)(n.code,{children:"macOS"})," for the operating system and Other for the language"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"7",children:["\n",(0,t.jsxs)(n.li,{children:["Copy the basic ",(0,t.jsx)(n.code,{children:"config.yml"})," to ",(0,t.jsx)(n.code,{children:".circleci/config.yml"}),", commit your code changes and push to github ",(0,t.jsx)(n.code,{children:"master"})]}),"\n",(0,t.jsxs)(n.li,{children:["Choose ",(0,t.jsx)(n.code,{children:"Start building"})," to initiate the first CI build. This build will fail. That's ok. We will update the config in the next step."]}),"\n",(0,t.jsxs)(n.li,{children:["Enable builds from forked pull requests. Go to project settings > Advanced Settings, then toggle on ",(0,t.jsx)(n.code,{children:"Build forked pull requests"})]}),"\n",(0,t.jsxs)(n.li,{children:["If this project is open-source, you'll want to make sure the open-source setting is enabled to allow for macOS builds. Go to project settings > Advanced Settings, then toggle ",(0,t.jsx)(n.code,{children:"Free and Open Source"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a folder in the project root named ",(0,t.jsx)(n.code,{children:".circleci"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Create a file inside that folder named ",(0,t.jsx)(n.code,{children:"config.yml"})]}),"\n",(0,t.jsx)(n.li,{children:"Use the below template in that file."}),"\n",(0,t.jsxs)(n.li,{children:["If needed, see ",(0,t.jsx)(n.a,{href:"https://circleci.com/docs/2.0/config-intro/#section=configuration",children:"configuration docs"})," for additional configuration options. (",(0,t.jsxs)(n.em,{children:["Here is a complete ",(0,t.jsx)(n.a,{href:"https://github.com/YOUR_ORG/open-source/blob/master/config.example.yml",children:"config.yml"})," with CI and CD steps completed"]}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'defaults: &defaults\n  docker:\n    # Choose the version of Node you want here\n    - image: circleci/node:10.11\n  working_directory: ~/repo\n\nversion: 2\njobs:\n  setup:\n    <<: *defaults\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-node-{{ checksum "package.json" }}\n            # fallback to using the latest cache if no exact match is found\n            - v1-dependencies-node-\n      - run:\n          name: Install dependencies\n          command: yarn install\n      - save_cache:\n          name: Save node modules\n          paths:\n            - node_modules\n          key: v1-dependencies-node-{{ checksum "package.json" }}\n\n  tests:\n    <<: *defaults\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-node-{{ checksum "package.json" }}\n            # fallback to using the latest cache if no exact match is found\n            - v1-dependencies-node-\n      - run:\n          name: Run tests\n          command: yarn ci:test # this command will be added to/found in your package.json scripts\n\nworkflows:\n  version: 2\n  test_and_release:\n    jobs:\n      - setup\n      - tests:\n          requires:\n            - setup\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsxs)(n.li,{children:["Make sure the test script is added to your ",(0,t.jsx)(n.code,{children:"package.json"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'  {\n    ...\n    "scripts": {\n      ...\n      "ci:test": "<command to run tests>" <<-- if you don\'t already have this one\n    },\n    ...\n  }\n'})}),"\n",(0,t.jsx)(n.h3,{id:"ios-continuous-deployment",children:"iOS Continuous Deployment"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Add Fastlane"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Before you can add continuous deployment, you'll need to setup Fastlane and Match to sign and deploy your app. You can follow these blog posts to get setup!"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://shift.infinite.red/simple-react-native-ios-releases-4c28bb53a97b",children:"Releasing on iOS with Fastlane"})," Make sure you get to the point of being able to run:"]}),"\n",(0,t.jsx)(n.li,{children:"fastlane ios beta"}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"In your Fastfile, add:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"before_all do\n setup_circle_ci\nend\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["In your ",(0,t.jsx)(n.code,{children:"beta"})," lane, make sure you have included a command that bumps the build number prior to building, and then commits the build number after building.\nExample:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'PROJECT = "YourProject"\nXCODE_PROJECT    = "#{PROJECT}.xcodeproj"\n  lane :beta do\n    increment_build_number(xcodeproj: "./#{XCODE_PROJECT}")\n    match(type: "appstore")\n    build_ios_app(\n      scheme: PROJECT,\n      workspace: "./YourProject.xcworkspace",\n      xcargs: "-UseNewBuildSystem=NO -allowProvisioningUpdates",\n      export_method: "app-store"\n    )\n    # Ship it!\n    upload_to_testflight(\n      skip_waiting_for_build_processing: true\n    )\n    commit_version_bump(\n      xcodeproj: "./#{XCODE_PROJECT}",\n      ignore: /tvOS/,\n      force: true,\n      message: "[skip ci] Version bump"\n    )\n  end\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["If you prefer, you can also do these steps as separate fastlane commands, just make sure to include a ",(0,t.jsx)(n.code,{children:"- run:"})," entry for each one in ",(0,t.jsx)(n.code,{children:"config.yml"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Setting up CircleCI to Run Fastlane"}),"\nCheck out ",(0,t.jsx)(n.a,{href:"https://medium.com/@odedre/circle-ci-v2-react-native-project-build-release-setup-ce4ef31209d0",children:"this blog post"})," for lots of helpful tips."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Make sure CircleCI has all the credentials to run your fastlane scripts:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go into the Settings screen for your project on CircleCI"}),"\n",(0,t.jsxs)(n.li,{children:['Under "Build Settings", click on "Environment Variables" (',(0,t.jsx)(n.a,{href:"https://circleci.com/gh/YOUR_ORG/YOURPROJECT/edit#env-vars",children:"https://circleci.com/gh/YOUR_ORG/YOURPROJECT/edit#env-vars"}),")"]}),"\n",(0,t.jsx)(n.li,{children:'Click "Add Variable"'}),"\n",(0,t.jsxs)(n.li,{children:["Set ",(0,t.jsx)(n.code,{children:"FASTLANE_USER"})," to the email address of your your Apple App Store Connect / Dev Portal user."]}),"\n",(0,t.jsxs)(n.li,{children:["Do this for all of the variables listed ",(0,t.jsx)(n.a,{href:"https://github.com/fastlane/docs/blob/950c6f42231d86b5187d2cfdcab2a6c81d0f61dc/docs/best-practices/continuous-integration.md#environment-variables-to-set",children:"here"})," ",(0,t.jsx)(n.strong,{children:"Note"}),": If your dev portal user does not have 2-Factor Auth turned on, you DO NOT need to set FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD. Including this variable when your account does need it will result in errors during TestFlight upload. You can find more info from the Fastlane Docs, and from the CircleCI codesigning docs"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"GITHUB_TOKEN"})," to env vars on CircleCI (",(0,t.jsx)(n.a,{href:"https://circleci.com/gh/YOUR_ORG/YOURPROJECT/edit#env-vars",children:"https://circleci.com/gh/YOUR_ORG/YOURPROJECT/edit#env-vars"}),"). Y"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If you need to make a new ",(0,t.jsx)(n.code,{children:"GITHUB_TOKEN"}),", go to ",(0,t.jsx)(n.a,{href:"https://github.com/settings/tokens/new",children:"https://github.com/settings/tokens/new"})," and create a new one with ",(0,t.jsx)(n.code,{children:"repo"})," access."]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Add the ",(0,t.jsx)(n.code,{children:"Circle CI"})," Github team to your repo (",(0,t.jsx)(n.a,{href:"https://github.com/YOUR_ORG/YOURPROJECT/settings/collaboration",children:"https://github.com/YOUR_ORG/YOURPROJECT/settings/collaboration"}),") with write access."]}),"\n",(0,t.jsxs)(n.li,{children:["Add the ",(0,t.jsx)(n.code,{children:"Circle CI"})," Github team as a read-only collaborator to the private match certificates repo."]}),"\n",(0,t.jsxs)(n.li,{children:["Log in to GitHub/CircleCI as the CI user. Then in CircleCI, go to Project Settings > Checkout SSH keys (",(0,t.jsx)(n.a,{href:"https://circleci.com/gh/YOURORGANIZATION/YOURPROJECT/edit#checkout",children:"https://circleci.com/gh/YOURORGANIZATION/YOURPROJECT/edit#checkout"}),") and add a new user key. This will allow CircleCI to clone the certs repo in order to sign your app."]}),"\n",(0,t.jsxs)(n.li,{children:["Go to Project Settings > Checkout SSH Keys and add a new deploy key. You will copy the fingerprint and paste into the ",(0,t.jsx)(n.code,{children:"config.yml"})," example below in the ",(0,t.jsx)(n.code,{children:"add_ssh_keys"})," section (there should be ",(0,t.jsx)(n.code,{children:'"'}),"s around it)"]}),"\n",(0,t.jsxs)(n.li,{children:["Add a script to your ",(0,t.jsx)(n.code,{children:"package.json"})," called ",(0,t.jsx)(n.code,{children:"ci:setup"}),". This will run any necessary shell commands to prepare your project for building. For example, creating private files like ",(0,t.jsx)(n.code,{children:".env"}),'. If you don\'t any additional setup, you can leave this command as "", or remove the ',(0,t.jsx)(n.code,{children:"ci:setup"})," step from the ",(0,t.jsx)(n.code,{children:"config.yml"})," example below."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'  {\n    ...\n    "scripts": {\n      ...\n      "ci:setup": "touch .env && echo \\"ENV_VAR=\\"$ENV_VAR >> .env",\n    },\n    ...\n  }\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": ",(0,t.jsx)(n.code,{children:"react-native-dotenv"})," throws errors if there is not a ",(0,t.jsx)(n.code,{children:".env"})," present with the variables it expects. However, if you don't want to put secret values in this script (you shouldn't), then you can add them directly to CircleCI under Project Settings > Environment Variables. Then you can reference them in this script as ",(0,t.jsx)(n.code,{children:"$ENV_VAR"}),"."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"mac"})," configuration and ",(0,t.jsx)(n.code,{children:"deploy_ios"})," job to your CircleCI ",(0,t.jsx)(n.code,{children:"config.yml"}),"\nNOTE: The macOS boxes currently come with Node 11.0, with no apparent way to change the version. This shouldn't be a huge problem. One known issue is with ",(0,t.jsx)(n.code,{children:"upath"}),", which is a deep dependency of react-native. If you encounter errors related to ",(0,t.jsx)(n.code,{children:"upath"})," requiring a lower version of Node, just make sure it is at ",(0,t.jsx)(n.code,{children:"1.1.0"}),", and not ",(0,t.jsx)(n.code,{children:"1.0.4"})," in your yarn.lock. See ",(0,t.jsx)(n.a,{href:"https://github.com/airbnb/enzyme/issues/1637#issuecomment-397327562",children:"https://github.com/airbnb/enzyme/issues/1637#issuecomment-397327562"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'defaults: ...\n\nmac: &mac\n  macos:\n    xcode: "10.1.0"\n  working_directory: ~/repo\n  environment:\n    FL_OUTPUT_DIR: output\n  shell: /bin/bash --login -o pipefail\n\nversion: 2\njobs:\n  setup: ...\n\n  tests: ...\n\n  deploy_ios:\n    <<: *mac\n    steps:\n      - checkout\n      - add_ssh_keys:\n          fingerprints: \u2014 \u201cSSH_FINGERPRINT_HERE\u201d\n      - run:\n          name: Git configuration\n          command: git config user.email "ci@your.domain" && git config user.name "CircleCI"\n      - run:\n          name: Set upstream branch\n          command: git branch --set-upstream-to origin ${CIRCLE_BRANCH}\n      # Node modules\n      - restore_cache:\n          name: Restore node modules\n          keys:\n            - v1-dependencies-mac-{{ checksum "package.json" }}\n            # fallback to using the latest cache if no exact match is found\n            - v1-dependencies-mac-\n      - run:\n          name: Install dependencies\n          command: NOYARNPOSTINSTALL=1 yarn install\n      - save_cache:\n          name: Save node modules\n          paths:\n            - node_modules\n          key: v1-dependencies-mac-{{ checksum "package.json" }}\n\n      # Cocoapods\n      - run:\n          name: Fetch CocoaPods Specs\n          command: |\n            curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf\n      - run:\n          working_directory: ios\n          name: Install CocoaPods\n          command: pod install --verbose\n\n      # Gems\n      - restore_cache:\n          name: Restore gems\n          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}\n      - run:\n          name: Bundle Install\n          command: bundle install\n          working_directory: ios\n      - save_cache:\n          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}\n          paths:\n            - vendor/bundle\n\n      # Misc setup\n      - run:\n          name: Misc setup\n          command: yarn ci:setup\n\n      # Git grooming\n      - run:\n          name: Pull latest git\n          command: git stash && git pull && git stash pop\n\n      # Run Fastlane\n      - run:\n          working_directory: ios\n          name: Fastlane\n          command: bundle exec fastlane ios beta\n\n      # Git cleanup\n      - run:\n          name: Pull latest git\n          command: git stash && git pull && git stash pop\n      - run:\n          name: Push version bump commit\n          command: git push\n      - store_artifacts:\n          path: output\n\nworkflows:\n  version: 2\n  test_and_release:\n    jobs:\n      - setup\n      - tests:\n          requires:\n            - setup\n      - deploy_ios:\n          filters:\n            branches:\n              only: master\n              ```\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Troubleshooting tips"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:['If you need to debug failed builds, you can use the "Rebuild with SSH" option in CircleCI. See ',(0,t.jsx)(n.a,{href:"https://circleci.com/docs/2.0/ssh-access-jobs/",children:"https://circleci.com/docs/2.0/ssh-access-jobs/"})," for more info."]}),"\n",(0,t.jsx)(n.li,{children:"Tip: make sure you are logged in to Github/CircleCI as yourself (not the CI user) when you hit the button to rebuild with SSH."}),"\n",(0,t.jsxs)(n.li,{children:["If you get a vague error saying ",(0,t.jsx)(n.code,{children:"File main.jsbundle does not exist"}),", that means there was an error while building the app and you can view the more detailed message by inspecting the log files with the following command (while in SSH mode). Increase the number of lines from 50 as needed."]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"tail -50 ios/output/buildlogs/gym/YourProject-YourProject.log"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4552:(e,n,s)=>{s.d(n,{I:()=>r,M:()=>c});var t=s(1504);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);